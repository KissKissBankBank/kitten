/// Setup a button icon element.
///
/// This mixin will setup an element to look like a button
/// with a picto inside.
///
/// Paddings depend on the size of button and the size of picto.
/// It is calculate automaticaly with this 2 values.
///
/// You can use 3 versions of this button: tiny, default and big.
///
/// @group buttons
///
/// @parameter {Map} $button-icon - a button icon specification
/// @parameter {Map} $icon        - a icon specification
///
/// @example scss - Usage
///
///   $button-icon: (
///     colors: (
///       light: (
///         color: #333,
///         background-color: #fff,
///         border-color: #d8d8d8,
///       ),
///       focus-light: (
///         color: #4a84ff,
///         background-color: #fff,
///         border-color: #cadbfd,
///       ),
///       hover-light: (
///         color: #4a84ff,
///         background-color: #fff,
///         border-color: #cadbfd,
///       ),
///       active-light: (
///         color: #fff,
///         background-color: #2c66e1,
///         border-color: #2c66e1,
///       )
///     )
///   )

@mixin k-ButtonIcon($button-icon) {
  @include k-with-module('k-ButtonIcon: $button-icon') {
    $border-size: 1px;

    $button-size-medium: 40px - ($border-size * 2);
    $button-size: 30px - ($border-size * 2);
    $button-size-big: 50px - ($border-size * 2);

    // SVG element default settings.
    $icon-width: k-px-to-rem(12px);
    $icon-height: k-px-to-rem(14px);

    // Get data for SVG.

    // light
    $light-color: map-get-deep($button-icon, ('colors', 'light', 'color'));
    $light-background-color: map-get-deep(
      $button-icon, ('colors', 'light', 'background-color'));
    $light-border-color: map-get-deep(
      $button-icon, ('colors', 'light', 'border-color'));

    // focus ligth
    $focus-light-color: map-get-deep(
      $button-icon, ('colors', 'focus-light', 'color'));
    $focus-light-background-color: map-get-deep(
      $button-icon, ('colors', 'focus-light', 'background-color'));
    $focus-light-border-color: map-get-deep(
      $button-icon, ('colors', 'focus-light', 'border-color'));

    // hover light
    $hover-light-color: map-get-deep(
      $button-icon, ('colors', 'hover-light', 'color'));
    $hover-light-background-color: map-get-deep(
      $button-icon, ('colors', 'hover-light', 'background-color'));
    $hover-light-border-color: map-get-deep(
      $button-icon, ('colors', 'hover-light', 'border-color'));

    // active light
    $active-light-color: map-get-deep(
      $button-icon, ('colors', 'active-light', 'color'));
    $active-light-background-color: map-get-deep(
      $button-icon, ('colors', 'active-light', 'background-color'));
    $active-light-border-color: map-get-deep(
      $button-icon, ('colors', 'active-light', 'border-color'));

    $transition-speed: .2s;

    .k-ButtonIcon {
      @include k-buttonBase($button-icon);
      @include k-buttonRounded($button-size, $icon-width, $icon-height);
    }

    .k-ButtonIcon__svg,
    .k-ButtonIcon--light__svg {
      display: block;
      margin: 0;
      padding: 0;
      width: $icon-width;
      height: $icon-height;
      transition: fill $transition-speed;
    }

    .k-ButtonIcon--light {
      fill: $light-color;
      background-color: $light-background-color;
      border-color: $light-border-color;

      &:hover {
        @include k-buttonBorder($hover-light-border-color);

        background-color: $hover-light-background-color;
        color: $hover-light-color;
      }

      &:focus {
        @if map-has-key($button-icon, 'focus-light') {
          @include k-buttonBorder($focus-light-border-color);

          background-color: $focus-light-background-color;
          color: $focus-light-color;
        }
        @else {
          @include k-buttonBorder($hover-light-border-color);

          background-color: $hover-light-background-color;
          color: $hover-light-color;
        }
      }

      &:active {
        @include k-buttonBorder($active-light-border-color);

        background-color: $active-light-background-color;
        color: $active-light-color;
      }
    }

    .k-ButtonIcon--light__svg {
      transition: fill $transition-speed;
      fill: $light-color;

      .k-ButtonIcon:hover & {
        fill: $hover-light-color;
      }

      .k-ButtonIcon:focus & {
        @if $focus-light-color {
          fill: $focus-light-color;
        }
        @else {
          fill: $hover-light-color;
        }
      }

      .k-ButtonIcon:active & {
        fill: $active-light-color;
      }
    }

    .k-ButtonIcon--light__svg__stroke {
      stroke: $light-color;
      transition: stroke $transition-speed;

      .k-ButtonIcon:hover & {
        stroke: $hover-light-color;
      }

      .k-ButtonIcon:focus & {
        @if $focus-light-color {
          stroke: $focus-light-color;
        }
        @else {
          stroke: $hover-light-color;
        }
      }

      .k-ButtonIcon:active & {
        stroke: $active-light-color;
      }
    }

    .k-ButtonIcon--medium {
      @include k-buttonRounded($button-size-medium,
        $icon-width, $icon-height);

      .k-ButtonIcon__svg {
        width: $icon-width;
        height: $icon-height;
      }
    }

    .k-ButtonIcon--big {
      @include k-buttonRounded($button-size-big,
        $icon-width, $icon-height);
    }

    .k-ButtonIcon__heart {
      $heart-size: k-px-to-rem(14px);
      @include k-buttonRounded($button-size, $heart-size, $heart-size);

      .k-ButtonIcon__svg {
        width: $heart-size;
        height: $heart-size;
      }
    }

    .k-ButtonIcon__signup {
      $signup-size: k-px-to-rem(18px);
      @include k-buttonRounded($button-size, $signup-size, $signup-size);

      .k-ButtonIcon__svg {
        width: $signup-size;
        height: $signup-size;
      }
    }

    .k-ButtonIcon--withoutHover {
      pointer-events: none;
    }
  }
}
