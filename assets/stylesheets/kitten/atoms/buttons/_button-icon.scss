/// Setup a button icon element.
///
/// This mixin will setup an element to look like a button
/// with a picto inside.
///
/// Paddings depend on the size of button and the size of picto.
/// It is calculate automaticaly with this 2 values.
///
/// You can use 3 versions of this button: tiny, default and big.
///
/// @group buttons
///
/// @parameter {Map} $button-icon - a button icon specification
/// @parameter {Map} $icon        - a icon specification
///
/// @example scss - Usage
///
///   $button-icon: (
///     colors: (
///       base: (
///         color: #333,
///         background-color: #fff,
///         border-color: #d8d8d8
///       ),
///       hover: (
///         color: #fff,
///         background-color: #333,
///         border-color: none
///       ),
///       active: (
///         color: #fff,
///         background-color: #151515
///       ),
///       disabled: (
///         color: #fff,
///         background-color: #d8d8d8
///       ),
///       is-selected: (
///         color: #fff,
///         background-color: #333
///       )
///     )
///   )

@mixin k-ButtonIcon($button-icon) {
  @include k-with-module('k-ButtonIcon: $button-icon') {
    $border-size: 1px;

    $button-size: 40px - ($border-size * 2);
    $button-size-tiny: 30px - ($border-size * 2);
    $button-size-big: 50px - ($border-size * 2);

    // SVG element default settings.
    $icon-width: k-px-to-rem(17px);
    $icon-height: k-px-to-rem(17px);
    $icon-width-tiny: k-px-to-rem(10px);
    $icon-height-tiny: k-px-to-rem(10px);

    // Get data for SVG.
    $colors: map-get($button-icon, 'colors');
    $base-color: map-get-deep($colors, ('base', 'color'));
    $hover-color: map-get-deep($colors, ('hover', 'color'));
    $active-color: map-get-deep($colors, ('active', 'color'));
    $disabled-color: map-get-deep($colors, ('disabled', 'color'));
    $focus-color: map-get-deep($colors, ('focus', 'color'));
    $is-selected-color: map-get-deep($colors, ('is-selected', 'color'));

    .k-ButtonIcon {
      @include k-buttonBase($button-icon);
      @include k-buttonRounded($button-size, $icon-width, $icon-height);

      &:hover {
        .k-ButtonIcon__svg {
          fill: $hover-color;
        }

        .k-ButtonIcon__svg__stroke {
          stroke: $hover-color;
        }
      }

      &:focus {
        .k-ButtonIcon__svg {
          @if $focus-color {
            fill: $focus-color;
          }
          @else {
            fill: $hover-color;
          }
        }

        .k-ButtonIcon__svg__stroke {
          @if $focus-color {
            stroke: $focus-color;
          }
          @else {
            stroke: $hover-color;
          }
        }
      }

      &:active {
        .k-ButtonIcon__svg {
          fill: $active-color;
        }

        .k-ButtonIcon__svg__stroke {
          stroke: $active-color;
        }
      }

      &:disabled {
        .k-ButtonIcon__svg {
          fill: $disabled-color;
        }

        .k-ButtonIcon__svg__stroke {
          stroke: $disabled-color;
        }
      }

      &.is-selected {
        .k-ButtonIcon__svg {
          fill: $is-selected-color;
        }

        .k-ButtonIcon__svg__stroke {
          stroke: $is-selected-color;
        }
      }
    }

    .k-ButtonIcon__svg {
      display: block;
      margin: 0;
      padding: 0;
      width: $icon-width;
      height: $icon-height;
      fill: $base-color;
    }

    .k-ButtonIcon--tiny {
      @include k-buttonRounded($button-size-tiny,
        $icon-width-tiny, $icon-height-tiny);

      .k-ButtonIcon__svg {
        width: $icon-width-tiny;
        height: $icon-height-tiny;
      }
    }

    .k-ButtonIcon--big {
      @include k-buttonRounded($button-size-big,
        $icon-width, $icon-height);
    }
  }
}
