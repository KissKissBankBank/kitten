/// Setup a button element.
///
/// This mixin will setup an element to look like a button.
///
/// Vertical paddings depend on the vertical-rhythm and horizontal padding and
/// horizontal paddings depends on the font-size.
///
/// @group buttons
///
/// @parameter {Map} $button - a button specification
///
/// @example scss - Usage
///   @include k-Button((
///     font: 'source-sans-semi-bold-uppercase',
///       colors: (
///         primary: (
///           base: (
///             color: #fff,
///             border-color: #4a84ff,
///             background-color: #4a84ff,
///           ),
///           focus: (
///             color: #fff,
///             border-color: #3b75f0,
///             background-color: #3b75f0,
///           ),
///           hover: (
///             color: #fff,
///             border-color: #3b75f0,
///             background-color: #3b75f0,
///           ),
///           active: (
///             color: #fff,
///             border-color: #2c66e1,
///             background-color: #2c66e1,
///           ),
///           disabled: (
///             color: #fff,
///             border-color: #d8d8d8,
///             background-color: #d8d8d8,
///           )
///         )
///       )
///   ));

@mixin k-Button($button) {
  @include k-with-module('k-Button: $button') {
    $border-size: 1px;

    // Button element default settings.
    $button-min-width: k-px-to-rem(160px - ($border-size * 2));
    $button-line-height: k-px-to-rem(40px - ($border-size * 2));
    // Button icon with words element default settings.
    $button-icon-words-min-width: k-px-to-rem(110px - ($border-size * 2));
    $button-icon-words-line-height: k-px-to-rem(40px - ($border-size * 2));

    // Button element big settings.
    $button-big-min-width: k-px-to-rem(200px - ($border-size * 2));
    $button-big-line-height: k-px-to-rem(50px - ($border-size * 2));
    // Button icon with words element big settings.
    $button-icon-words-big-min-width: k-px-to-rem(130px - ($border-size * 2));
    $button-icon-words-big-line-height: k-px-to-rem(50px - ($border-size * 2));

    // The button element has a radius of 1.25rem (
    //   20px (designed border-radius) / 16px (base font-size)
    // ). The horizontal paddings are computed using this radius.
    $button-radius: 1.25rem;
    $button-big-radius: 1.56rem;

    // Button font-size is computed using a modular scale and a defined step of this
    // scale.
    $button-step: -2;

    // SVG element default settings.
    $icon-width: k-px-to-rem(12px);
    $icon-height: k-px-to-rem(14px);

    $font: k-string-definition(k-map-fetch($button, 'font'));

    $button-default: map-get-deep($button, ('default'));
    $button-primary: map-get-deep($button, ('primary'));


    .k-Button {
      @include k-buttonBase($button-default);
      @include k-typographyFontSize($button-step, $button-line-height);
      @include k-typographyFont($font);

      padding: 0 $button-radius * 2;
      border-radius: $button-radius;
      min-width: $button-min-width;

      text-decoration: none;
      text-align: center;
    }

    .k-Button__svg {
      @include k-buttonSvg(
        $button-default,
        'k-Button',
        'k-Button__svg__stroke'
      );

      width: $icon-width;
      height: $icon-height;
    }

    .k-Button--primary {
      @include k-buttonBase($button-primary);

      .k-Button__svg {
        @include k-buttonSvg(
          $button-primary,
          'k-Button',
          'k-Button__svg__stroke'
        );

        width: $icon-width;
        height: $icon-height;
      }
    }

    .k-ButtonIconWords {
      display: flex;

      padding: 0 $button-radius;
      min-width: $button-icon-words-min-width;

      .k-Button__svg {
        margin-top: k-px-to-rem(11px);
        margin-right: k-px-to-rem(14px);
      }
    }

    .k-Button--big {
      @include k-typographyFontSize($button-step, $button-big-line-height);

      padding: 0 $button-big-radius * 2;
      border-radius: $button-big-radius;
      min-width: $button-big-min-width;
    }

  }
}
