/// Setup a button element.
///
/// This mixin will setup an element to look like a button.
///
/// Vertical paddings depend on the vertical-rhythm and horizontal padding and
/// horizontal paddings depends on the font-size.
///
/// @group buttons
///
/// @parameter {Map} $button - a button specification
///
/// @example scss - Usage
///   @include k-Button((
///     font: 'source-sans-semi-bold-uppercase',
///      colors: (
///        base: (
///          color: #fff,
///          background-color: #4a84ff,
///        ),
///        light: (
///          color: #333,
///          background-color: #fff,
///          border-color: #d8d8d8,
///        ),
///        focus: (
///          color: #fff,
///          background-color: #3b75f0,
///          light: (
///            color: #fff,
///            background-color: #4a84ff,
///          )
///        ),
///        hover: (
///          color: #fff,
///          background-color: #3b75f0,
///          light: (
///            color: #fff,
///            background-color: #4a84ff,
///          )
///        ),
///        active: (
///          color: #fff,
///          background-color: #2c66e1,
///        ),
///        disabled: (
///          color: #fff,
///          background-color: #d8d8d8,
///        )
///      )
///   ));

@mixin k-Button($button) {
  @include k-with-module('k-Button: $button') {
    $border-size: 1px;

    // Button element default settings.
    $button-min-width: k-px-to-rem(160px - ($border-size * 2));
    $button-line-height: k-px-to-rem(40px - ($border-size * 2));

    // Button element big settings.
    $button-big-min-width: k-px-to-rem(200px - ($border-size * 2));
    $button-big-line-height: k-px-to-rem(50px - ($border-size * 2));


    // The button element has a radius of 1.25rem (
    //   20px (designed border-radius) / 16px (base font-size)
    // ). The horizontal paddings are computed using this radius.
    $button-radius: 1.25rem;
    $button-big-radius: 1.56rem;

    // Button font-size is computed using a modular scale and a defined step of this
    // scale.
    $button-step: -2;

    $font: k-string-definition(k-map-fetch($button, 'font'));

    // Base
    $color: k-color-definition(
      k-map-fetch($button, ('colors', 'base', 'color')));
    $background: k-color-definition(
      k-map-fetch($button, ('colors', 'base', 'background-color')));

    // Light
    $color-light: k-color-definition(
      k-map-fetch($button, ('colors', 'light', 'color')));
    $background-light: k-color-definition(
      k-map-fetch($button, ('colors', 'light', 'background-color')));
    $border-light: k-color-definition(
      k-map-fetch($button, ('colors', 'light', 'border-color')));

    // Focus
    $color-focus: k-color-definition(
      k-map-fetch($button, ('colors', 'focus', 'color')));
    $background-focus: k-color-definition(
      k-map-fetch($button, ('colors', 'focus', 'background-color')));
    $color-focus-light: k-color-definition(
      k-map-fetch($button, ('colors', 'focus', 'light', 'color')));
    $background-focus-light: k-color-definition(
      k-map-fetch($button, ('colors', 'focus', 'light', 'background-color')));

    // Hover
    $color-hover: k-color-definition(
      k-map-fetch($button, ('colors', 'hover', 'color')));
    $background-hover: k-color-definition(
      k-map-fetch($button, ('colors', 'hover', 'background-color')));
    $color-hover-light: k-color-definition(
      k-map-fetch($button, ('colors', 'hover', 'light', 'color')));
    $background-hover-light: k-color-definition(
      k-map-fetch($button, ('colors', 'hover', 'light', 'background-color')));

    // Active
    $color-active: k-color-definition(
      k-map-fetch($button, ('colors', 'active', 'color')));
    $background-active: k-color-definition(
      k-map-fetch($button, ('colors', 'active', 'background-color')));

    // Disabled
    $color-disabled: k-color-definition(
      k-map-fetch($button, ('colors', 'disabled', 'color')));
    $background-disabled: k-color-definition(
      k-map-fetch($button, ('colors', 'disabled', 'background-color')));

    .k-Button--column {
      justify-content: space-between;
      flex-direction: column;
    }

    .k-Button {
      @include k-buttonBase($button);
      @include k-typographyFontSize($button-step, $button-line-height);
      @include k-typographyFont($font);

      padding: 0 $button-radius * 2;
      border-radius: $button-radius;
      min-width: $button-min-width;

      text-decoration: none;
      text-align: center;

      &:disabled {
        color: $color-disabled;
        background-color: $background-disabled;
      }
    }

    .k-Button--focus,
    .k-Button:focus {
      color: $color-focus;
      background-color: $background-focus;
    }

    .k-Button--hover,
    .k-Button:hover {
      color: $color-hover;
      background-color: $background-hover;
    }

    .k-Button--active,
    .k-Button:active {
      color: $color-active;
      background-color: $background-active;
    }

    .k-Button--light {
      color: $color-light;
      background-color: $background-light;
      border-color: $border-light;
    }

    .k-Button--light--focus,
    .k-Button--light:focus {
      color: $color-focus-light;
      background-color: $background-focus-light;
    }

    .k-Button--light--hover,
    .k-Button--light:hover {
      color: $color-hover-light;
      background-color: $background-hover-light;
    }

    .k-Button--light--active,
    .k-Button--light:active {
      color: $color-active;
      background-color: $background-active;
    }

    .k-Button--big {
      @include k-typographyFontSize($button-step, $button-big-line-height);

      padding: 0 $button-big-radius * 2;
      border-radius: $button-big-radius;
      min-width: $button-big-min-width;
    }

  }
}
