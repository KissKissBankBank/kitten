/// Setup a button element.
///
/// This mixin will setup an element to look like a button.
///
/// Vertical paddings depend on the vertical-rhythm and horizontal paddings
/// depend on the font-size.
///
/// k-Button--icon is different to k-ButtonIcon. This class only used on
/// button-icon-words.
/// - `.k-Button--icon`
///
/// Available color modifiers:
/// - `.k-Button--default`
/// - `.k-Button--primary`
/// - `.k-Button--secondary`
/// - `.k-Button--secondaryOnWhite`
///
/// Available size modifiers:
/// - `.k-Button--tiny`
/// - `.k-Button--big`
///
/// @group buttons
///
/// @example scss button - Usage
///   @include k-Button;
///
/// @example html
///  <button class="k-Button k-Button--default">My button</button>
///
/// @example html
///  <button class="k-Button
///                 k-Button--default
///                 k-Button--icon">
///    <svg class="k-Button__icon" â€¦ /></svg>
///    My button
///  </button>

@mixin k-Button {
  $font: 'source-sans-semi-bold-uppercase';
  $border-size: 1px;

  // Colors.
  $default-colors: (
    base: (
      color: map-get($k-colors, 'font-1'),
      border-color: map-get($k-colors, 'line-2'),
      background-color: #fff,
    ),
    hover: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-1'),
      background-color: map-get($k-colors, 'primary-1'),
    ),
    focus: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-1'),
      background-color: map-get($k-colors, 'primary-1'),
    ),
    active: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-3'),
      background-color: map-get($k-colors, 'primary-3'),
    ),
    is-selected: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-3'),
      background-color: map-get($k-colors, 'primary-3'),
    ),
    disabled: (
      color: #fff,
      border-color: map-get($k-colors, 'line-2'),
      background-color: map-get($k-colors, 'line-2'),
    ),
  );

  $primary-colors: (
    base: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-1'),
      background-color: map-get($k-colors, 'primary-1'),
    ),
    hover: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-2'),
      background-color: map-get($k-colors, 'primary-2'),
    ),
    focus: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-2'),
      background-color: map-get($k-colors, 'primary-2'),
    ),
    active: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-3'),
      background-color: map-get($k-colors, 'primary-3'),
    ),
    is-selected: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-3'),
      background-color: map-get($k-colors, 'primary-3'),
    ),
    disabled: (
      color: #fff,
      border-color: map-get($k-colors, 'line-2'),
      background-color: map-get($k-colors, 'line-2'),
    ),
  );

  $secondary-colors: (
    base: (
      color: map-get($k-colors, 'primary-1'),
      border-color: map-get($k-colors, 'primary-4'),
      background-color: #fff,
    ),
    hover: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-2'),
      background-color: map-get($k-colors, 'primary-2'),
    ),
    focus: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-2'),
      background-color: map-get($k-colors, 'primary-2'),
    ),
    active: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-3'),
      background-color: map-get($k-colors, 'primary-3'),
    ),
    is-selected: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-3'),
      background-color: map-get($k-colors, 'primary-3'),
    ),
    disabled: (
      color: #fff,
      border-color: map-get($k-colors, 'line-2'),
      background-color: map-get($k-colors, 'line-2'),
    ),
  );

  $secondary-on-white-colors: (
    base: (
      color: map-get($k-colors, 'primary-1'),
      border-color: map-get($k-colors, 'primary-4'),
      background-color: map-get($k-colors, 'primary-5'),
    ),
    hover: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-2'),
      background-color: map-get($k-colors, 'primary-2'),
    ),
    focus: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-2'),
      background-color: map-get($k-colors, 'primary-2'),
    ),
    active: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-3'),
      background-color: map-get($k-colors, 'primary-3'),
    ),
    is-selected: (
      color: #fff,
      border-color: map-get($k-colors, 'primary-3'),
      background-color: map-get($k-colors, 'primary-3'),
    ),
    disabled: (
      color: #fff,
      border-color: map-get($k-colors, 'line-2'),
      background-color: map-get($k-colors, 'line-2'),
    ),
  );

  $zinc-colors: (
    base: (
      color: map-get($k-colors, 'font-1'),
      border-color: map-get($k-colors, 'secondary-1'),
      background-color: map-get($k-colors, 'secondary-1'),
    ),
    hover: (
      color: map-get($k-colors, 'font-1'),
      border-color: map-get($k-colors, 'secondary-2'),
      background-color: map-get($k-colors, 'secondary-2'),
    ),
    focus: (
      color: map-get($k-colors, 'font-1'),
      border-color: map-get($k-colors, 'secondary-2'),
      background-color: map-get($k-colors, 'secondary-2'),
    ),
    active: (
      color: map-get($k-colors, 'font-1'),
      border-color: map-get($k-colors, 'secondary-3'),
      background-color: map-get($k-colors, 'secondary-3'),
    ),
    is-selected: (
      color: map-get($k-colors, 'font-1'),
      border-color: map-get($k-colors, 'secondary-3'),
      background-color: map-get($k-colors, 'secondary-3'),
    ),
    disabled: (
      color: #fff,
      border-color: map-get($k-colors, 'line-2'),
      background-color: map-get($k-colors, 'line-2'),
    ),
  );

  // Size settings button.
  $button-size-tiny: 30px - ($border-size * 2);
  $button-size: 40px - ($border-size * 2);
  $button-size-big: 50px - ($border-size * 2);

  $button-tiny-min-width: k-px-to-rem(160px);
  $button-tiny-line-height: k-px-to-rem($button-size-tiny);

  $button-min-width: k-px-to-rem(160px);
  $button-line-height: k-px-to-rem($button-size);

  $button-big-min-width: k-px-to-rem(200px);
  $button-big-line-height: k-px-to-rem($button-size-big);

  // Button radius settings.
  $button-radius: k-px-to-rem(20px);
  $button-big-radius: k-px-to-rem(25px);

  // Button font-size is computed using a modular scale and a defined step of this
  // scale.
  $button-step: -2;

  // SVG element default settings.
  $icon-width: k-px-to-rem(12px);
  $icon-height: k-px-to-rem(14px);

  $icon-width-tiny: k-px-to-rem(10px);
  $icon-height-tiny: k-px-to-rem(12px);

  $transition-speed: .2s;

  .k-Button {
    @include k-buttonBase;
    @include k-typographyFontSize($button-step, $button-line-height);
    @include k-typographyFont($font);

    padding: 0 $button-radius;
    border-radius: $button-radius;
    min-width: $button-min-width;

    text-align: center;
    text-decoration: none;
  }

  // Colors modifiers.

  .k-Button--default {
    @include k-buttonColorBase($default-colors);
  }

  .k-Button--primary {
    @include k-buttonColorBase($primary-colors);
  }

  .k-Button--secondary {
    @include k-buttonColorBase($secondary-colors);
  }

  .k-Button--secondaryOnWhite {
    @include k-buttonColorBase($secondary-on-white-colors);
  }

  // TODO: rename all buttons name following the same naming strategy.
  .k-Button--zinc {
    @include k-buttonColorBase($zinc-colors);
  }

  .k-Button__icon,
  .k-Button__icon--tiny {
    @include k-buttonSvg(
      $default-colors,
      'k-Button--default',
      'k-Button__svg__stroke'
    );

    @include k-buttonSvg(
      $primary-colors,
      'k-Button--primary',
      'k-Button__svg__stroke'
    );

    @include k-buttonSvg(
      $secondary-colors,
      'k-Button--secondary',
      'k-Button__svg__stroke'
    );

    @include k-buttonSvg(
      $secondary-on-white-colors,
      'k-Button--secondaryOnWhite',
      'k-Button__svg__stroke'
    );
  }

  // Size modifiers.

  .k-Button--tiny {
    @include k-typographyFontSize(
      $button-step,
      $button-tiny-line-height
    );

    &.k-Button--icon {
      .k-Button__icon {
        @include k-buttonRounded($button-size-tiny, $icon-width, $icon-height);
      }
    }
  }

  .k-Button--big {
    @include k-typographyFontSize(
      $button-step,
      $button-big-line-height
    );

    padding: 0 $button-big-radius;
    border-radius: $button-big-radius;
    min-width: $button-big-min-width;

    &.k-Button--icon {
      .k-Button__icon {
        @include k-buttonRounded($button-size-big, $icon-width, $icon-height);
      }
    }
  }

// Button--icon

  .k-Button--icon {
    padding: 0 $button-radius 0 0;
    min-width: auto;

    .k-Button__icon {
      @include k-buttonRounded($button-size, $icon-width, $icon-height);

      box-sizing: content-box;
      display: inline-block;
      width: $icon-width;
      height: $icon-height;
      vertical-align: bottom;
      transition: fill $transition-speed;

      .k-Button__icon__stroke {
        transition: stroke $transition-speed;
      }
    }

    .k-Button__icon--tiny {
      @include k-buttonRounded(
        $button-size-tiny,
        $icon-width-tiny,
        $icon-height-tiny
      );

      box-sizing: content-box;
      display: inline-block;
      width: $icon-width-tiny;
      height: $icon-height-tiny;
      vertical-align: bottom;
      transition: fill $transition-speed;

      .k-Button__icon--tiny__stroke {
        transition: stroke $transition-speed;
      }
    }
  }

  .k-Button--iconRight {
    padding: 0 0 0 $button-radius;
  }
}
