/// Setup a typographic scale.
///
/// This mixin will setup a typographic scale, with fonts sizes computed
/// automatically using a modular scale.
///
/// Font sizes and margins must be declared as unitless multipliers.
/// Everything is then derived from the base font size and line height.
///
/// The generated scale is not overly opinionated: all font sizes must be
/// on the modular scale, but it is possible to create more than one style per
/// font size. Besides, the style classes themselves are named by the caller,
/// and never tied specifically to `h*` tags. Only one class is generated by
/// font style.
///
/// @group typography
///
/// @example scss - Usage
///
///   @include k-TypographyScale;
///
/// @example css - CSS output
///   .heading1 {
///     font-family: "lato", sans-serif;
///     font-size:   4.2358rem;
///     line-height: 4.5rem;
///
///     color:       #444;
///     font-weight: 700;
///   }
///
///   .heading2 {
///     font-family: "lato", sans-serif;
///     font-size:   2.61792rem;
///     line-height: 3rem;
///
///     color:       #444;
///     font-weight: 700;
///   }
///
///   .heading3 {
///     font-family: "lato", sans-serif;
///     font-size:   1.618rem;
///     line-height: 3rem;
///
///     color:       #444;
///     font-weight: 500;
///   }
///
///   .heading4 {
///     font-family: "lato", sans-serif;
///     font-size:   1rem;
///     line-height: 1.5rem;
///
///     color:          #aaa;
///     font-weight:    300;
///     text-transform: uppercase;
///   }
///
///   .paragraph {
///     font-family: "lato", sans-serif;
///     font-size:   1rem;
///     line-height: 1.5rem;
///
///     color:       #444;
///     font-weight: 300;
///   }
@mixin k-TypographyScale {
  $styles: (
    TitleH1: (
      family: 'source-sans-light',
      step: 13,
      line-height: 1.13,
    ),

    TitleH1Dosis: (
      family: 'dosis',
      step: 14,
      line-height: 1.2,
    ),

    TitleH2: (
      family: 'source-sans-semi-bold',
      step: 9,
      line-height: 1.16,
    ),

    TitleH2Dosis: (
      family: 'dosis',
      step: 10,
      line-height: 1,
    ),

    TitleH3: (
      family: 'source-sans-semi-bold',
      step: 6,
      line-height: 1.8,
    ),

    TitleH3Dosis: (
      family: 'dosis',
      step: 6,
      line-height: 0.8,
    ),

    TitleH4: (
      family: 'source-sans-semi-bold',
      step: 2,
      line-height: 1.4,
    ),

    TitleH4Dosis: (
      family: 'dosis',
      step: 2,
      line-height: 1.3,
    ),

    ParagraphXl: (
      family: 'source-sans',
      step: 2,
      line-height: 1.6,
    ),

    ParagraphXlLight: (
      family: 'source-sans-light',
      step: 2,
      line-height: 1.3,
    ),

    ParagraphLg: (
      family: 'source-sans',
      step: 1,
    ),

    ParagraphMd: (
      family: 'source-sans',
      step: 0,
    ),

    ParagraphSm: (
      family: 'source-sans',
      step: -1,
    ),

    ParagraphXsSemiBold: (
      family: 'source-sans-semi-bold',
      step: -2,
    ),

    ParagraphXs: (
      family: 'source-sans',
      step: -2,
    )
  );

  $multiplier: k-number-definition(
    k-map-fetch($k-typography, 'scale-multiplier')
  );

  @each $style-name, $style in $styles {
    $font: k-map-fetch($style, 'family');
    $step: k-default(
      k-number-definition(map-get($style, 'step'), $unit: none),
    0);
    $line-height: k-number-definition(map-get($style, 'line-height'), $unit: none);

    .k-#{$style-name} {
      @include k-typographyFont($font);

      @if $line-height {
        @include k-typographyFontSize($step, $line-height);
      }
      @else {
        @include k-typographyFontSize($step);
      }
    }
  }
}
