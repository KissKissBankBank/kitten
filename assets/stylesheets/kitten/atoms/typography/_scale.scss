@import 'kitten/schema';
@import 'kitten/helpers/typography/font-family';
@import 'kitten/helpers/typography/font-size';
@import 'kitten/helpers/typography/font-style';
@import 'kitten/atoms/typography/scale-schema';

/// Setup a typographic scale.
///
/// This mixin will setup a typographic scale, with fonts sizes computed
/// automatically using a modular scale.
///
/// Font sizes and margins must be declared as unitless multipliers.
/// Everything is then derived from the base font size and line height.
///
/// The generated scale is not overly opinionated: all font sizes must be
/// on the modular scale, but it is possible to create more than one style per
/// font size. Besides, the style classes themselves are named by the caller,
/// and never tied specifically to `h*` tags. Only one class is generated by
/// font style.
///
/// @group 0300_typography_components
///
/// @parameter {Map} $scale - a typographic scale specification
///
/// @example scss - Usage
///   $typography: (
///      ...
///   );
///
///   $typographic-scale: (
///     typography: $typography,
///     multiplier: $major-second,
///
///     styles: (
///       heading1: (
///         family: 'lato',
///         step:   3,
///
///         color:  #444,
///         font-weight: 700,
///       ),
///
///       heading2: (
///         family: 'lato',
///         step:   2,
///
///         color:  #444,
///         font-weight: 700,
///       ),
///
///       heading3: (
///         family: 'lato',
///         step:   1,
///
///         color:  #444,
///         font-weight: 500,
///       ),
///
///       heading4: (
///         family: 'lato',
///         step:   0,
///
///         color:  #aaa,
///         font-weight:    300,
///         text-transform: uppercase
///       ),
///
///       paragraph: (
///         family: 'lato',
///         step:   0,
///
///         color:  $body-copy-color,
///         font-weight: 300,
///       )
///     )
///   );
///
///   @include k-TypographyScale($typographic-scale);
///
/// @example css - CSS output
///   .heading1 {
///     font-family: "lato", sans-serif;
///     font-size:   4.2358rem;
///     line-height: 4.5rem;
///
///     color:       #444;
///     font-weight: 700;
///   }
///
///   .heading2 {
///     font-family: "lato", sans-serif;
///     font-size:   2.61792rem;
///     line-height: 3rem;
///
///     color:       #444;
///     font-weight: 700;
///   }
///
///   .heading3 {
///     font-family: "lato", sans-serif;
///     font-size:   1.618rem;
///     line-height: 3rem;
///
///     color:       #444;
///     font-weight: 500;
///   }
///
///   .heading4 {
///     font-family: "lato", sans-serif;
///     font-size:   1rem;
///     line-height: 1.5rem;
///
///     color:          #aaa;
///     font-weight:    300;
///     text-transform: uppercase;
///   }
///
///   .paragraph {
///     font-family: "lato", sans-serif;
///     font-size:   1rem;
///     line-height: 1.5rem;
///
///     color:       #444;
///     font-weight: 300;
///   }
@mixin k-TypographyScale($scale) {
  $valid:
    k-validate(
      $scale,
      $k-typography-scale-schema,
      'k-TypographyScale',
      '$scale'
    );

  $typography: map-get($scale, 'typography');
  $multiplier: map-get($scale, 'multiplier');
  $styles: map-get($scale, 'styles');

  @each $style-name, $style in $styles {
    $step: k-default(map-get($style, 'step'), 0);

    .k-#{$style-name} {
      @include k-typographyFontFamily($typography, $style);
      @include k-typographyFontSize($typography, $multiplier, $step);
      @include k-typographyFontStyle($typography, $style);
    }
  }
}
