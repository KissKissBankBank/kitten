/// Setup a tag button element.
///
/// This mixin will setup an element to look like a button with a tag inside.
///
/// Paddings depend on the size of button and the size of the tag.
/// It is computed automatically with these 2 values.
///
/// Available color modifier:
/// - `.k-ButtonIcon--hydrogen`
///
/// Available size modifier:
/// - `.k-TagButton--tiny`
/// - `.k-TagButton--big`
///
/// Available icon modifier:
/// - `.k-TagButton--icon`
///
/// Available svg modifier:
/// - `.k-TagButton__svg`
///
/// @group buttons
///
/// @example scss - Usage
///   @include k-TagButton;
///
/// @example html
///   <button class="k-TagButton k-TagButton--hydrogen">Tag</button>
///
/// @example html
///   <button class="k-TagButton k-TagButton--icon">
///     <svg class="k-TagButton__icon" />
///   </button>

@mixin k-TagButton {
  $font: 'regular';
  $border-size: 2px;

  // Size settings tag-button.
  $tag-button-size-tiny: 30px - ($border-size * 2);
  $tag-button-size: 40px - ($border-size * 2);
  $tag-button-size-big: 50px - ($border-size * 2);

  $tag-button-min-width:k-px-to-rem(60px);

  $tag-button-line-height-tiny: k-px-to-rem($tag-button-size-tiny);
  $tag-button-line-height: k-px-to-rem($tag-button-size);
  $tag-button-line-height-big: k-px-to-rem($tag-button-size-big);

  // Deprecated
  // $tag-button-min-width-big: 80px - ($border-size * 2);
  $tag-button-line-height-big: 50px - ($border-size * 2);

  // The tag button has a radius of 4px
  $tag-button-radius: k-px-to-rem(4px);

  // Base
  $color: map-get($k-colors,'font-1');
  $border-color: map-get($k-colors,'line-1');
  $background-color: map-get($k-colors,'background-1');

  // Focus
  $color-focus: map-get($k-colors,'primary-1');
  $border-color-focus: map-get($k-colors,'primary-1');
  $background-color-focus: map-get($k-colors,'background-1');

  // Hover
  $color-hover: map-get($k-colors,'primary-1');
  $border-color-hover: map-get($k-colors,'primary-1');
  $background-color-hover: map-get($k-colors,'background-1');

  // Active and `is-selected`
  $color-active: map-get($k-colors,'background-1');
  $border-color-active: map-get($k-colors,'primary-1');
  $background-color-active: map-get($k-colors,'primary-1');


  // Nav TagButton
  // Base
  $color-nav: map-get($k-colors, 'font-1');
  $border-color-nav: map-get($k-colors, 'background-1');
  $background-color-nav: map-get($k-colors, 'background-1');

  // Focus
  $color-focus-nav: map-get($k-colors, 'background-1');
  $border-color-focus-nav: map-get($k-colors, 'primary-1');
  $background-color-focus-nav: map-get($k-colors, 'primary-1');

  // Active
  $color-active-nav: map-get($k-colors, 'background-1');
  $border-color-active-nav: map-get($k-colors, 'primary-1');
  $background-color-active-nav: map-get($k-colors, 'primary-1');

  // Hover
  $color-hover-nav: map-get($k-colors, 'primary-1');
  $border-color-hover-nav: map-get($k-colors, 'background-1');
  $background-color-hover-nav: map-get($k-colors, 'background-1');

  // Button font-size is computed using a modular scale and a defined step of
  // this scale.
  $button-step: -2; // 12px

  $transition-speed: .2s;

  .k-TagButton {
    @include k-buttonBase;
    @include k-typographyFont($font);
    @include k-typographyFontSize($button-step, $tag-button-line-height);

    padding: 0 k-px-to-rem(20px);
    border-radius: $tag-button-radius;
    min-height: $tag-button-line-height;
    min-width: $tag-button-min-width;

    color: $color;
    background-color: $background-color;
    border-color: $border-color;

    &:focus {
      color: $color-focus;
      background-color: $background-color-focus;
      border-color: $border-color-focus;
    }

    &:hover {
      color: $color-hover;
      background-color: $background-color-hover;
      border-color: $border-color-hover;
    }

    &:active,
    &.is-selected {
      color: $color-active;
      background-color: $background-color-active;
      border-color: $border-color-active;
    }
  }

  // Size modifier.
  .k-TagButton--tiny {
    @include k-typographyFontSize($button-step, $tag-button-line-height-tiny);

    min-height: $tag-button-line-height-tiny;
  }

  .k-TagButton--big {
    @include k-typographyFontSize($button-step, $tag-button-line-height-big);

    color: $color-nav;
    background-color: $background-color-nav;
    border-color: $border-color-nav;

    &:focus {
      color: $color-focus-nav;
      background-color: $background-color-focus-nav;
      border-color: $border-color-focus-nav;
    }

    &:hover {
      color: $color-hover-nav;
      background-color: $background-color-hover-nav;
      border-color: $border-color-hover-nav;
    }

    &:active,
    &.is-selected {
      color: $color-active-nav;
      background-color: $background-color-active-nav;
      border-color: $border-color-active-nav;
    }
    // min-width: $tag-button-min-width-big;
    min-height: $tag-button-line-height-big;
  }

  // Icon modifier.
  .k-TagButton--icon {
    @include k-buttonColors('hydrogen', (svg: false));
  }

  // svg modifier.
  .k-TagButton__icon {
    vertical-align: middle;
  }

  // Nav TagButton Big
  .k-TagButton--withoutBorder--big {
    border-color: $background-color;
  }

  .k-TagButton--padding--big {
    padding: 0 k-px-to-rem(30px);
  }
}
