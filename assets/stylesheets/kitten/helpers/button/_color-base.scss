/// Apply button colors.
///
/// This mixin will apply colors for pseudo-classes and state classes:
///   - `:hover`
///   - `:focus` (optionnal)
///   - `:active`
///   - `:is-selected`
///   - `:disabled` (optionnal)
///
/// When `border-color` is not defined, `transparent` is used by default.
///
/// @group buttons
///
/// @parameter {Map} $button - a map of colors
///
/// @example scss - Usage
///  $colors: (
///    base: (
///      color: #333,
///      border-color: #d8d8d8,
///      background-color: #fff,
///    ),
///    hover: (
///      color: #fff,
///      border-color: #19bbff,
///      background-color: #19bbff,
///    ),
///    focus: (…),
///    active: (…),
///    is-selected: (…),
///    disabled: (…),
///  );
///
///  .k-MyButton {
///    @include k-buttonColorBase($colors)
///  }
///
/// @example css - CSS output
///   .k-MyButton {
///     …
///     background-color: #fff;
///     color: #333;
///     transition: background-color .2s,
///                 color .2s,
///                 border-color .2s;
///   }
///
///   .k-MyButton:hover {
///     …
///     background-color: #19bbff;
///     color: #fff;
///   }

@mixin k-buttonColorBase($colors) {
  // base colors
  $base: k-colors-definition(k-map-fetch($colors, 'base'));
  $base-color: map-get($base, 'color');
  $base-border-color: map-get($base, 'border-color');
  $base-background-color: map-get($base, 'background-color');
  $base-background-image: map-get($base, 'background-image');

  // hover colors
  $hover: k-colors-definition(k-map-fetch($colors, 'hover'));
  $hover-color: map-get($hover, 'color');
  $hover-border-color: map-get($hover, 'border-color');
  $hover-background-color: map-get($hover, 'background-color');
  $hover-background-image: map-get($hover, 'background-image');

  // focus colors
  $focus: k-colors-definition(k-map-fetch($colors, 'focus'));
  $focus-color: map-get($focus, 'color');
  $focus-border-color: map-get($focus, 'border-color');
  $focus-background-color: map-get($focus, 'background-color');
  $focus-background-image: map-get($focus, 'background-image');

  // active colors
  $active: k-colors-definition(k-map-fetch($colors, 'active'));
  $active-color: map-get($active, 'color');
  $active-border-color: map-get($active, 'border-color');
  $active-background-color: map-get($active, 'background-color');
  $active-background-image: map-get($active, 'background-image');

  // is-selected colors (optional)
  $is-selected: k-colors-definition(map-get($colors, 'is-selected'));
  $is-selected-color: map-get($is-selected, 'color');
  $is-selected-border-color: map-get($is-selected, 'border-color');
  $is-selected-background-color: map-get($is-selected, 'background-color');
  $is-selected-background-image: map-get($is-selected, 'background-image');

  // disabled colors (optional)
  $disabled: k-colors-definition(map-get($colors, 'disabled'));
  $disabled-color: map-get($disabled, 'color');
  $disabled-border-color: map-get($disabled, 'border-color');
  $disabled-background-color: map-get($disabled, 'background-color');
  $disabled-background-image: map-get($disabled, 'background-image');

  // transition
  $transition-speed: .2s;

  @include k-buttonBorder($base-border-color);
  @if $base-background-color {
    background-color: $base-background-color;
  }
  @if $base-color {
    color: $base-color;
  }
  @if $base-background-image {
    background-image: $base-background-image;
  }
  transition: background-color $transition-speed,
              color $transition-speed,
              border-color $transition-speed;

  &:hover {
    @include k-buttonBorder($hover-border-color);

    @if $hover-background-color {
      background-color: $hover-background-color;
    }
    @if $hover-color {
      color: $hover-color;
    }
    @if $hover-background-image {
      background-image: $hover-background-image;
    }
  }

  &:focus {
    @if map-has-key($colors, 'focus') {
      @include k-buttonBorder($focus-border-color);

      @if $focus-background-color {
        background-color: $focus-background-color;
      }
      @if $focus-color {
        color: $focus-color;
      }
      @if $focus-background-image {
        background-image: $focus-background-image;
      }
    }
    @else {
      @include k-buttonBorder($hover-border-color);

      background-color: $hover-background-color;
      color: $hover-color;
    }

    outline: none;
  }

  &:active {
    @include k-buttonBorder($active-border-color);

    @if $active-background-color {
      background-color: $active-background-color;
    }
    @if $active-color {
      color: $active-color;
    }
    @if $active-background-image {
      background-image: $active-background-image;
    }
  }

  @if map-has-key($colors, 'disabled') {
    &:disabled {
      @include k-buttonBorder($disabled-border-color);

      @if $disabled-background-color {
        background-color: $disabled-background-color;
      }
      @if $disabled-color {
        color: $disabled-color;
      }
      @if $disabled-background-image {
        background-image: $disabled-background-image;
      }
    }
  }

  @if map-has-key($colors, 'is-selected') {
    &.is-selected {
      @include k-buttonBorder($is-selected-border-color);

      @if $is-selected-background-color {
        background-color: $is-selected-background-color;
      }
      @if $is-selected-color {
        color: $is-selected-color;
      }
      @if $is-selected-background-image {
        background-image: $is-selected-background-image;
      }
    }
  }
}
