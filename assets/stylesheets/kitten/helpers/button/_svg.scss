/// Set a svg on a button.
///
/// Given a svg color, this mixin will use the passed color to set the
/// `svg` CSS rule.
///
/// @group buttons
///
/// @parameter {Map} $colors - map of colors
/// @parameter {String} $parent - parent's class
/// @parameter {String} $stroke_class - parent's stroke class
///
/// @example scss - Usage
///    $colors: (
///      base: (
///        color: #fff,
///        border-color: #00669e,
///        background-color: #00669e,
///      ),
///      hover: (
///        color: #000,
///        border-color: #00669e,
///        background-color: #00669e,
///      ),
///      …
///    );
///
///   .k-Button__svg {
///     @include k-buttonSvg($colors, 'k-Button', 'k-Button__stroke');
///   }
///
/// @example css - CSS output
///    .k-Button .k-Button__svg {
///      fill: #fff;
///    }
///
///    .k-Button:hover .k-Button__svg {
///      fill: #000;
///    }
///    …

@mixin k-buttonSvg($colors, $parent, $stroke_class) {

  $base-color: k-color-definition(
    k-map-fetch($colors, ('base', 'color')));
  $hover-color: k-color-definition(
    k-map-fetch($colors, ('hover', 'color')));
  $focus-color: k-color-definition(
    k-map-fetch($colors, ('focus', 'color')));
  $active-color: k-color-definition(
    k-map-fetch($colors, ('active', 'color')));
  $disabled-color: k-color-definition(
    k-map-fetch($colors, ('disabled', 'color')));
  $is-selected-color: k-color-definition(
    k-map-fetch($colors, ('is-selected', 'color')));

  .#{$parent} & {
    fill: $base-color;
  }

  .#{$parent}:hover & {
    fill: $hover-color;
  }

  .#{$parent}:focus & {
    fill: $focus-color;
  }

  .#{$parent}:active & {
    fill: $active-color;
  }

  .#{$parent}:disabled & {
    fill: $disabled-color;
  }

  .#{$parent}.is-selected & {
    fill: $is-selected-color;
  }

  .#{$stroke_class} {

    .#{$parent} & {
      stroke: $base-color;
    }

    .#{$parent}:hover & {
      stroke: $hover-color;
    }

    .#{$parent}:focus & {
      stroke: $focus-color;
    }

    .#{$parent}:active & {
      stroke: $active-color;
    }

    .#{$parent}:disabled & {
      stroke: $disabled-color;
    }

    .#{$parent}.is-selected & {
      stroke: $is-selected-color;
    }
  }
}
